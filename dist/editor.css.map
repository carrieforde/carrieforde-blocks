{"version":3,"sources":["webpack:///./src/blocks/base.scss","webpack:///./src/_config.scss","webpack:///./node_modules/aurora-utilities/sass/utilities/_functions.scss","webpack:///./node_modules/aurora-utilities/sass/utilities/mixins/_media-queries.scss","webpack:///./src/blocks/grid-list/style.scss","webpack:///./src/blocks/hero-heading/editor.scss","webpack:///./src/blocks/projects/editor.scss"],"names":[],"mappings":"AAMC;EACC,0BCAuB,EDCvB;;AAED;EACC,eCJuB,EDcvB;EAXD;;;;;;IASE,0BAAwB,EACxB;;AAdF;EACC,0BCCgB,EDAhB;;AAED;EACC,eCHgB,EDahB;EAXD;;;;;;IASE,0BAAwB,EACxB;;AAdF;EACC,0BCGqB,EDFrB;;AAED;EACC,eCDqB,EDWrB;EAXD;;;;;;IASE,0BAAwB,EACxB;;AAdF;EACC,0BCKkB,EDJlB;;AAED;EACC,eCCkB,EDSlB;EAXD;;;;;;IASE,0BAAwB,EACxB;;AAdF;EACC,0BCOiB,EDNjB;;AAED;EACC,eCGiB,EDOjB;EAXD;;;;;;IASE,0BAAwB,EACxB;;AAdF;EACC,uBCUU,EDTV;;AAED;EACC,YCMU,EDIV;EAXD;;;;;;IASE,uBAAwB,EACxB;;AAIH;EACC,gBAAqB,EAgBrB;EAdA;IACC,eAAc;IACd,gBAAe;IACf,uBC0Fc;IDzFd,mBEgCyC,EFvBzC;;AAGF;EACC,aAAY;EACZ,YAAW,EACX;;AGjCC;MHcD;QAOE,uBAAsB,EAMvB;;AG3BA;MHcD;QAWE,gBCiFa,ED/Ed;AIxCF;EACC,0BAAyB,EA4BzB;EA7BD;IAIE,4BAA2B;IAC3B,cAAa;IACb,oBAAmB;IACnB,4DAA2D;IAC3D,iBAAgB;IAChB,qBAAoB,EACpB;EAVF;IAaE,mBAAkB,EAWlB;IAxBF;MAgBG,eAAc;MACd,qDAAoD;MACpD,gCAA+B;MAC/B,YAAW;MACX,qBAAoB;MACpB,iBAAgB;MAChB,oBAAmB,EACnB;EAvBH;IA2BE,qBAAoB,EACpB;ACzBF;EACC,mBAAkB;EAClB,cJgHe,EIjGf;EAbA;IACC,8BAA6B;IAC7B,qBAAoB;IACpB,sBJ4GqB,EI3GrB;EARF;IAWE,mBAAkB,EAClB;EAZF;IAeE,2BAA0B,EAC1B;AChBF;EACC,yBAAwB,EACxB","file":"editor.css","sourcesContent":["@import \"aurora-utilities\";\n@import \"../config\";\n\n// Colors\n@each $name, $color in $editor-palette {\n\n\t.has-#{$name}-background-color {\n\t\tbackground-color: $color;\n\t}\n\n\t.has-#{$name}-color {\n\t\tcolor: $color;\n\n\t\ta,\n\t\th2,\n\t\th3,\n\t\th4,\n\t\th5,\n\t\th6 {\n\t\t\tcolor: $color !important;\n\t\t}\n\t}\n}\n\n.wp-block-carrieforde-blocks {\n\tpadding: $sp-triple 0;\n\n\t&__wrapper {\n\t\tmargin: 0 auto;\n\t\tmax-width: 100%;\n\t\tpadding: 0 $sp-double * 2 0 $sp-triple;\n\t\twidth: $content-width;\n\n\t\t@include mq-min($tablet-landscape) {\n\t\t\tpadding: 0 5rem 0 4rem;\n\t\t}\n\n\t\t@include mq-min($desktop) {\n\t\t\tpadding: 0 $sp-double;\n\t\t}\n\t}\n}\n\n.icon-logo {\n\theight: 100%;\n\twidth: 100%;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/blocks/base.scss","// CONFIG\n\n// ====================================\n// COLORS\n// ====================================\n\n// Descriptive colors.\n$marjorelle-blue: #7341f1;\n$shamrock: #55ee9e;\n\n$black-russian: #252428;\n$ebony: #323036;\n$gun-powder: #4b4950;\n$jumbo: #7d7985;\n$gray-suit: #97949e;\n$concrete: #f2f2f3;\n\n$white: #fff;\n$black: #000;\n\n// Utility colors.\n$apple: #54a236;\n$well-read: #b13134;\n$tacha: #dbc15b;\n\n// Main colors.\n$color-primary: $marjorelle-blue !default;\n$color-accent: $shamrock !default;\n$color-success: $apple !default;\n$color-danger: $well-read !default;\n$color-light-gray: $concrete !default;\n$color-dark-gray: $ebony !default;\n$color-shadow: rgba($ebony, 0.15);\n\n/// The main colors used throughout the site. This map can be used to automatically add color classes.\n///\n/// @type Map\n$theme-colors: (\n\t\"primary\": $color-primary,\n\t\"accent\": $color-accent,\n\t\"success\": $color-success,\n\t\"danger\": $color-danger,\n\t\"light-gray\": $color-light-gray,\n\t\"dark-gray\": $color-dark-gray,\n\t\"shadow\": $color-shadow\n);\n\n/// The color palette used within the content editor. This map can be used to automatically add color classes.\n///\n/// @type Map\n$editor-palette: (\n\t\"marjorelle-blue\": $marjorelle-blue,\n\t\"shamrock\": $shamrock,\n\t\"black-russian\": $black-russian,\n\t\"gun-powder\": $gun-powder,\n\t\"gray-suit\": $gray-suit,\n\t\"white\": $white\n);\n\n// Elements.\n$body-background: $white;\n\n$text-default-dark: $black-russian;\n$text-default-light: $white;\n\n$link: $color-primary;\n$link-hover: $color-accent;\n$link-visited: $link;\n\n// ====================================\n// TYPOGRAPHY\n// ====================================\n\n$font-family-sans-serif: \"Karla\", sans-serif !default;\n$font-family-monospace: \"Inconsolata\", monospace !default;\n\n/// Set the `body` font family.\n///\n/// @type String\n$base-font-family: $font-family-sans-serif;\n\n/// Set the base (`root`) font size for the project. This should be unitless!\n///\n/// @type Number\n$base-font-size: 18 !default;\n\n/// Set the base line height for the project. This value should be unitless and represent the pixel equivalent.\n///\n/// @type Number\n$base-line-height: 29 !default;\n\n/// Set the base font weight for the project.\n///\n/// @type {Number|String}\n$base-font-weight: 400 !default;\n\n// ====================================\n// SIZES\n// ====================================\n\n/// Set the max width of the site.\n///\n/// @type Number\n$site-width: rem(1600);\n\n/// Set the width of the site's content.\n///\n/// @type Number\n$content-width: rem(1050);\n\n/// Set a default gutter width.\n///\n/// @type Number\n$gutter: 20px;\n\n$sp-quarter: 0.25rem;\n$sp-half: 0.5rem;\n$sp-single: 1rem;\n$sp-single-half: 1.5rem;\n$sp-double: 2rem;\n$sp-triple: 3rem;\n\n// ====================================\n// BREAKPOINTS\n// ====================================\n\n/// Breakpoints - add more as needed.\n///\n/// @type Number\n/// @link https://medium.freecodecamp.com/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862#.or3duno2h\n$tablet-portrait: 600px;\n$tablet-landscape: 900px;\n$desktop: 1200px;\n$desktop-xl: 1800px;\n\n// ====================================\n// Z-INDEX\n// ====================================\n\n/// Keep your sanity while managing your z-indeces.\n///\n/// @type Map\n/// @link https://github.com/minamarkham/sassy-starter/blob/master/src/scss/utilities/_config.scss#L39\n$z-index: (\n\tdefault: 1,\n\theading: 3\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/_config.scss","// FUNCTIONS\n\n/// Removes unit from length.\n///\n/// @param  {Number} $number - Number from which to remove unit.\n/// @return {Number}         - Unitless number.\n///\n/// @link   https://css-tricks.com/snippets/sass/strip-unit-function/\n@function strip-unit($number) {\n  @if type-of($number) == 'number' and not unitless($number) {\n    @return $number/($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n/// Get a unitless number from two numbers. Helpful for calculation line height.\n///\n/// @param  {Number} $number                 - Numerator for calculation.\n/// @param  {Number} $base [$base-font-size] - Denominator for calculation.\n/// @return {Number}                         - Number without units.\n@function unitless-calc($number, $base: $base-font-size) {\n  @if not unitless($number) {\n    $number: strip-unit($number);\n  }\n\n  @if not unitless($base) {\n    $base: strip-unit($base);\n  }\n\n  @return $number / $base;\n}\n\n/// Convert a pixel value to ems. Pass `$base` for increased accuracy.\n///\n/// @param  {Number} $pxval                  - The pixel value to convert.\n/// @param  {Number} $base [$base-font-size] - The pixel equivalent of ancestor font size.\n/// @return {Number}                         - The `em` font size.\n///\n/// @link   https://github.com/thoughtbot/bourbon/blob/v4-stable/app/assets/stylesheets/functions/_px-to-em.scss\n@function em($pxval, $base: $base-font-size) {\n  @if not unitless($pxval) {\n    $pxval: strip-unit($pxval);\n  }\n\n  @if not unitless($base) {\n    $base: strip-unit($base);\n  }\n\n  @return ($pxval / $base) * 1em;\n}\n\n/// Convert a pixel value to rems.\n///\n/// @param  {Number} $pxval - The pixel value to convert.\n/// @return {Number}        - The `rem` font size.\n///\n/// @link   https://github.com/thoughtbot/bourbon/blob/v4-stable/app/assets/stylesheets/functions/_px-to-rem.scss\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-unit($pxval);\n  }\n\n  @return ($pxval / $base-font-size) * 1rem;\n}\n\n/// Tint a color (add white) by a specified amount.\n///\n/// @param  {Color}  $color  - The color to tint.\n/// @param  {Number} $amount - The amount of white to add.\n/// @return {Color}          - The tinted color.\n@function tint($color, $amount) {\n  @return mix(#fff, $color, $amount);\n}\n\n/// Tone a color (add gray) by a specified amount.\n///\n/// @param  {Color}  $color          - The color to tone.\n/// @param  {Number} $amount         - The amount of gray to add.\n/// @param  {Color}  $gray [#808080] - The gray to mix.\n/// @return {Color}                  - The toned color.\n/// @todo Replace hardcoded gray with global / default specified in `_config.scss`.\n@function tone($color, $amount, $gray: #808080) {\n  @return mix($gray, $color, $amount);\n}\n\n/// Shade a color (add black) by a specified amount.\n///\n/// @param  {Color}  $color  - The color to shade.\n/// @param  {Number} $amount - The amount of black to add.\n/// @return {Color}          - The shaded color.\n@function shade($color, $amount) {\n  @return mix(#000, $color, $amount);\n}\n\n/// Get a z-index from a z-index map.\n///\n/// @param  {String} $index        - The index to get.\n/// @param  {Map}    $z [$z-index] - The map containing z-indeces.\n/// @return {Number}               - The corresponding z-index value.\n@function z($index, $z: $z-index) {\n  @if not map-get($z, $index) {\n    @warn 'No index `#{inspect($index)}` found!';\n  }\n  @return map-get($z, $index);\n}\n\n/// Calculate the luminance of a given color.\n///\n/// @param  {Color}  $color - The color to check.\n/// @return {Number}        - The color's luminance.\n///\n/// @link   https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n@function luminance($color) {\n  $red: red($color) * 0.2126;\n  $green: green($color) * 0.7152;\n  $blue: blue($color) * 0.0722;\n\n  @return $red + $green + $blue;\n}\n\n/// Calculate the contrast between two colors.\n///\n/// @param  {Color}  $color1 - The first color to check.\n/// @param  {Color}  $color2 - The second color to check.\n/// @return {Number}         - The contrast ratio between the two colors.\n///\n/// @link   https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n@function calculate-contrast($color1, $color2) {\n  $color1: luminance($color1) + 0.05;\n  $color2: luminance($color2) + 0.05;\n\n  @return max($color1, $color2) / min($color1, $color2);\n}\n\n/// Chooses the color with the best contrast for the base.\n///\n/// @param  {Color} $base-color                  - The color against which to check.\n/// @param  {Color} $light [$text-default-light] - The light color against which to check.\n/// @param  {Color} $dark  [$text-default-dark]  - The dark color against which to check.\n/// @return {Color}                              - The color with the better contrast.\n///\n/// @link   https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n@function contrast($base-color, $light: $text-default-light, $dark: $text-default-dark) {\n  $contrast-light: calculate-contrast($base-color, $light);\n  $contrast-dark: calculate-contrast($base-color, $dark);\n\n  @if ($contrast-light > $contrast-dark) {\n    @return $light;\n  } @else {\n    @return $dark;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/aurora-utilities/sass/utilities/_functions.scss","// MEDIA QUERIES\n\n/// Create a `min-width` media query.\n///\n/// @param {Number} $min - The length to be used.\n///\n/// @example - scss Usage\n///  @include mq-min($desktop) {...}\n@mixin mq-min($min) {\n  @if type-of($min) != 'number' {\n    @error '$min is not a length unit.';\n  }\n\n  @media only screen and (min-width: $min) {\n    @content;\n  }\n}\n\n/// Create a `max-width` media query.\n/// `max-width` subtracts 1 unit to avoid conflicts with `min-width` queries.\n///\n/// @param {Number} $min - The length to be used.\n///\n/// @example - scss Usage\n///  @include mq-min($desktop) {...}\n@mixin mq-max($max) {\n  @if type-of($max) != 'number' {\n    @error '$max is not a length unit.';\n  }\n\n  @media only screen and (max-width: $max - 1) {\n    @content;\n  }\n}\n\n/// Create a media query range (between `min-width` and `max-width`).\n/// `max-width` subtracts 1 unit to avoid conflicts with `min-width` queries.\n///\n/// @param {Number} $min - The minimum breakpoint.\n/// @param {Number} $max - The maximum breakpoint.\n///\n/// @example - scss Usage\n///  @include ($tablet-portrait, $tablet-landscape) {...}\n@mixin mq($min: null, $max: null) {\n  @if $min == null {\n    @include mq-max($max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include mq-min($min) {\n      @content;\n    }\n  } @else {\n    @if type-of($min) != 'number' and type-of($max) != 'number' {\n      @error 'One of the parameters is not a length unit.';\n    }\n    @media only screen and (min-width: $min) and (max-width: $max - 1) {\n      @content;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/aurora-utilities/sass/utilities/mixins/_media-queries.scss",".wp-block-carrieforde-blocks-grid-list {\n\tdisplay: block !important;\n\n\tol {\n\t\tcounter-reset: ordered-list;\n\t\tdisplay: grid;\n\t\tgrid-gap: 2rem 3rem;\n\t\tgrid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n\t\tlist-style: none;\n\t\tpadding-left: 0.5rem;\n\t}\n\n\tli {\n\t\tmargin-left: 1.5em;\n\n\t\t&:before {\n\t\t\tcolor: #7341f1;\n\t\t\tcontent: counter(ordered-list, decimal-leading-zero);\n\t\t\tcounter-increment: ordered-list;\n\t\t\tfloat: left;\n\t\t\tfont-size: 1.33333em;\n\t\t\tfont-weight: 700;\n\t\t\tmargin-left: -1.5em;\n\t\t}\n\t}\n\n\tstrong {\n\t\tfont-size: 1.33333em;\n\t}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/blocks/grid-list/style.scss","@import \"aurora-utilities\";\n@import \"../../config\";\n\n.wp-block-carrieforde-blocks-hero-heading {\n\tfont-size: 1.25rem;\n\tpadding: $sp-single;\n\n\t&__title {\n\t\tbackground-color: transparent;\n\t\tfont-size: 1.66667em;\n\t\tmargin-bottom: $sp-single-half;\n\t}\n\n\tp {\n\t\tmargin-bottom: 1em;\n\t}\n\n\ta {\n\t\tborder-color: currentColor;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/blocks/hero-heading/editor.scss","@import \"aurora-utilities\";\n@import \"../../config\";\n\n.icon-spinner {\n\tmargin-top: 0 !important;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/blocks/projects/editor.scss"],"sourceRoot":""}