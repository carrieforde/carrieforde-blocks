{"version":3,"sources":["webpack:///webpack/bootstrap c858dab57196c388fc39","webpack:///./src/blocks/grid-list/index.js"],"names":["registerBlockType","wp","blocks","InnerBlocks","editor","__","i18n","title","icon","category","supports","html","edit","save"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7DM,IAAEA,iBAAF,GAAwBC,GAAGC,MAA3B,CAAEF,iBAAF;AAAA,IACFG,WADE,GACcF,GAAGG,MADjB,CACFD,WADE;AAAA,IAEJE,EAFI,GAECJ,GAAGK,IAAH,CAAQD,EAFT;;AAIN;;;;AAIAL,kBAAkB,8BAAlB,EAAkD;AAChDO,SAAOF,GAAG,WAAH,CADyC;AAEhDG,QAAM,OAF0C;AAGhDC,YAAU,SAHsC;AAIhDC,YAAU;AACRC,UAAM;AADE,GAJsC;;AAQhD;;;;;;;;AAQAC,QAAM;AAAA,WACJ;AAAA;AAAA,QAAK,WAAU,WAAf;AACE,0BAAC,WAAD;AADF,KADI;AAAA,GAhB0C;;AAsBhD;;;;;;;AAOAC,QAAM;AAAA,WACJ;AAAA;AAAA,QAAK,WAAU,WAAf;AACE,0BAAC,WAAD,CAAa,OAAb;AADF,KADI;AAAA;AA7B0C,CAAlD,E","file":"editor-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c858dab57196c388fc39","const { registerBlockType } = wp.blocks,\n  { InnerBlocks } = wp.editor,\n  __ = wp.i18n.__;\n\n/**\n * Every block starts by registering a new block type definition.\n * @see https://wordpress.org/gutenberg/handbook/block-api/\n */\nregisterBlockType('carrieforde-blocks/grid-list', {\n  title: __('Grid List'),\n  icon: 'heart',\n  category: 'widgets',\n  supports: {\n    html: false\n  },\n\n  /**\n   * The edit function describes the structure of your block in the context of the editor.\n   * This represents what the editor will render when the block is used.\n   * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#edit\n   *\n   * @param {Object} [props] Properties passed from the editor.\n   * @return {Element}       Element to render.\n   */\n  edit: () => (\n    <div className=\"grid-list\">\n      <InnerBlocks />\n    </div>\n  ),\n\n  /**\n   * The save function defines the way in which the different attributes should be combined\n   * into the final markup, which is then serialized by Gutenberg into `post_content`.\n   * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#save\n   *\n   * @return {Element}       Element to render.\n   */\n  save: () => (\n    <div className=\"grid-list\">\n      <InnerBlocks.Content />\n    </div>\n  )\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/blocks/grid-list/index.js"],"sourceRoot":""}